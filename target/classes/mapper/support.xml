<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.heartpet.action.SupportDAO">

	<sql id="support_keyword">
		LIKE '%' || #{keyword} || '%'
    </sql>

	<select id="support_no" resultType="int">
		select max(support_no) from heartpet_support
	</select>
	
	<insert id="sup_insert" parameterType="SupportDTO">
		<selectKey resultType="int" keyProperty="support_no" order="BEFORE">
			select max(support_no) from heartpet_support
		</selectKey>
			insert into heartpet_support values(#{support_no}+1,#{support_userid},#{support_price},#{support_date},1)
	</insert>
	
	<update id="sup_update" parameterType="SupportDTO">
		update heartpet_support set support_userid = #{support_userid}, support_price = #{support_price}, support_date = #{support_date} where support_no = #{support_no}
	</update>

	<select id="sup_content" parameterType="int" resultType="SupportDTO">
   		select * from heartpet_support where support_no = #{no}
   </select>
   
   <update id="sup_delete" parameterType="int">
   		update heartpet_support set support_status = 0 where support_no = #{no}
   </update>
   
<!--    <update id="sup_seq" parameterType="int">
   		<![CDATA[update heartpet_support set support_no = support_no-1 where support_no > #{no}]]>
   </update> -->
   
   <insert id="sup_pay" parameterType="hashmap">
		<selectKey resultType="int" keyProperty="support_no" order="BEFORE">
			select max(support_no) from heartpet_support
		</selectKey>
			insert into heartpet_support values(#{support_no}+1,#{userid},#{amount},sysdate,1)
	</insert>
	
    <select id="sup_list" parameterType="hashMap" resultType="SupportDTO">
        SELECT * 
        FROM (SELECT s.*, row_number() over(
        <choose>
        	<when test="order.equals('')"> order by support_no desc </when>
            <when test="order.equals('no_desc')"> order by support_no desc </when>
            <when test="order.equals('date_desc')"> order by support_date desc </when>
            <when test="order.equals('price_desc')"> order by support_price desc </when>     
        </choose>
        ) rnum from heartpet_support s
        WHERE support_status = 1
   			<if test="search_id != null and !search_id.equals('')">
				and support_userid like '%' || #{search_id} || '%'
			</if>
			<if test="search_price != null and !search_price.equals('')">
				and support_price like '%' || #{search_price} || '%'
			</if>
			<if test="search_date_start != null and !search_date_start.equals('')">
				<![CDATA[and support_date >= #{search_date_start}]]>
			</if>
			<if test="search_date_end != null and !search_date_end.equals('')">
				<![CDATA[and support_date < to_date(#{search_date_end},'YYYY-MM-DD')+1 ]]>
			</if>
        <![CDATA[) WHERE rnum >= #{startNo} and rnum <= #{endNo}]]>
        
    </select>

	<!-- 후원 개수 -->
  	<select id="sup_count" parameterType="hashMap" resultType="int">
		select count(*) from heartpet_support WHERE support_status = 1
			<if test="search_id != null and !search_id.equals('')">
				and support_userid like '%' || #{search_id} || '%'
			</if>
			<if test="search_price != null and !search_price.equals('')">
				and support_price like '%' || #{search_price} || '%'
			</if>
			<if test="search_date_start != null and !search_date_start.equals('')">
				<![CDATA[and support_date >= #{search_date_start}]]>
			</if>
			<if test="search_date_end != null and !search_date_end.equals('')">
				<![CDATA[and support_date < to_date(#{search_date_end},'YYYY-MM-DD')+1 ]]>
			</if>
	</select>
	
	<update id= "user_price_update" parameterType="hashmap">
			update heartpet_user set user_totalprice = (user_totalprice+#{amount}) where user_id = #{userid}
	</update>
</mapper>