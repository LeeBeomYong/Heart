<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewDAO">

	<!-- 
	////////////////////////////////////////////////////////////////////////////////////////////  
	// Review
	////////////////////////////////////////////////////////////////////////////////////////////  	
	-->
    <sql id="review_join">
        FROM heartpet_review r 
        JOIN heartpet_animal a 
        ON r.review_animal_id = a.animal_no
    </sql>
    <sql id="review_keyword">
		LIKE '%' || #{keyword} || '%'
    </sql>
	
	<!-- review : list -->
	<select id="review_list" parameterType="hashMap" resultType="ReviewDTO">
		SELECT * 
            FROM (SELECT r.*, a.animal_name, ROW_NUMBER() OVER(ORDER BY review_no DESC) rnum <include refid="review_join" />
		<where>
			<choose>
				<when test="field.equals('allSearch') and keyword != ''"> (review_title <include refid="review_keyword" /> OR review_content <include refid="review_keyword" />
				OR review_animal_tag <include refid="review_keyword" /> OR review_id <include refid="review_keyword" /> OR animal_name <include refid="review_keyword" />)</when>
				<when test="field.equals('category') and keyword != ''"> review_animal_tag <include refid="review_keyword" /></when>
				<when test="field.equals('title') and keyword != ''"> review_title <include refid="review_keyword" /></when>
				<when test="field.equals('content') and keyword != ''"> review_content <include refid="review_keyword" /></when>
				<when test="field.equals('id') and keyword != ''"> review_id <include refid="review_keyword" /></when>
				<when test="field.equals('name') and keyword != ''"> animal_name <include refid="review_keyword" /></when>
			</choose>
		</where>
         <![CDATA[) WHERE rnum >= #{startNo} AND rnum <= #{endNo}]]>
       	 <choose>
       		<when test="order == ''"></when>
       		<when test="order.equals('date_desc')"> ORDER BY review_regdate DESC </when>         
       		<when test="order.equals('hit_desc')"> ORDER BY review_hit DESC</when>         
       		<when test="order.equals('no_desc')"> ORDER BY review_no DESC</when>         
       	 </choose>
	</select>
	
	<!-- review : count -->
	<select id="review_count" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
            FROM (SELECT r.*, a.animal_name <include refid="review_join" />
        <where>
            <choose>
                <when test="field.equals('allSearch') and keyword != ''"> (review_title <include refid="review_keyword" />) OR (review_content <include refid="review_keyword" />) 
                OR (review_animal_tag <include refid="review_keyword" />) OR (review_id <include refid="review_keyword" />) OR (animal_name <include refid="review_keyword" />)</when>
                <when test="field.equals('category') and keyword != ''"> review_animal_tag <include refid="review_keyword" /></when>
                <when test="field.equals('title') and keyword != ''"> review_title <include refid="review_keyword" /></when>
                <when test="field.equals('content') and keyword != ''"> review_content <include refid="review_keyword" /></when>
                <when test="field.equals('id') and keyword != ''"> review_id <include refid="review_keyword" /></when>
                <when test="field.equals('name') and keyword != ''"> animal_name <include refid="review_keyword" /></when>
            </choose>
        </where>
        )
	</select>
	
	<select id="review_animal" resultType="hashMap">
		SELECT animal_name 
			FROM heartpet_animal 
			WHERE animal_no IN 
        <foreach item="animalNo" collection="list" open="(" close=")" separator=", ">
			#{ animalNo }
        </foreach>
	</select>
	
	<!-- review : content -->
 	<update id="review_hit" parameterType="int">
		UPDATE heartpet_review 
			SET review_hit = review_hit + 1 
			WHERE review_no = #{ review_no }
	</update>	
	<select id="review_content" parameterType="int" resultType="ReviewDTO">
		SELECT r.*, a.animal_name <include refid="review_join" /> 
			WHERE review_no = #{ review_no }
	</select> 
	
	<!-- review : insert -->
 	<insert id="review_insert" parameterType="ReviewDTO">
        <selectKey resultType="int" keyProperty="review_no" order="BEFORE">
		SELECT MAX(review_no)+1 FROM heartpet_review
        </selectKey>
		INSERT INTO heartpet_review 
			VALUES (#{ review_no }, 
			#{ review_id }, 
			#{ review_animal_id }, 
			#{ review_animal_tag }, 
			default, 
			#{ review_title },
			#{ review_content }, 
			sysdate, 
			#{ review_img1 },
			#{ review_img2 },
			#{ review_img3 },
			#{ review_video })
	</insert> 

	<!-- review : animal_id -->
    <select id="animal_id" parameterType="String" resultType="list">
		SELECT review_animal_id 
			FROM heartpet_review 
			WHERE review_id = #{ session_id }
	</select>
	
	<!-- review : update -->
	<update id="review_update" parameterType="ReviewDTO">
		UPDATE heartpet_review 
			SET	review_title = #{ review_title }, 
			review_content = #{ review_content } 
			<if test="review_img1 != null">, review_img1 = #{ review_img1 } </if> 
			<if test="review_img2 != null">, review_img2 = #{ review_img2 } </if> 
			<if test="review_img3 != null">, review_img3 = #{ review_img3 } </if> 
			<if test="review_video != null">, review_video = #{ review_video } </if> 
			WHERE review_no = #{ review_no }
	</update>
	
	<!-- review : delete -->
 	<delete id="review_delete" parameterType="int">
		DELETE FROM heartpet_review 
			WHERE review_no = #{ review_no }
	</delete>
	
    <!-- 
    //======================================================================  
    // Review : animal_tag
    //======================================================================    
    -->     	
    <!-- review : dog/cat list -->
    <select id="review_animal_option" parameterType="hashMap" resultType="ReviewDTO">
        SELECT * 
            FROM (SELECT r.*, a.animal_name, ROW_NUMBER() OVER(ORDER BY review_no DESC) rnum <include refid="review_join" />
        <where>
            review_animal_tag = #{ animal_tag }
        </where>
         <![CDATA[) WHERE rnum >= #{startNo} AND rnum <= #{endNo}]]>
        <choose>
       		<when test="order == ''"></when>
       		<when test="order.equals('date_desc')"> ORDER BY review_regdate DESC </when>         
       		<when test="order.equals('hit_desc')"> ORDER BY review_hit DESC</when>         
       		<when test="order.equals('no_desc')"> ORDER BY review_no DESC</when>         
       	 </choose>
    </select>
    
    <!-- review : dog/cat : 게시글 개수 -->
    <select id="review_animal_count" parameterType="String" resultType="int">
        SELECT COUNT(*) 
            FROM heartpet_review
        <where>
            review_animal_tag = #{ animal_tag }
        </where>
    </select>
    
    <!-- dog/cat 전체 리스트 페이징 x -->
    <select id="review_total_list" parameterType="String" resultType="ReviewDTO">
        SELECT r.*, a.animal_name <include refid="review_join" />
        <where>
            review_animal_tag = #{ animal_tag }
        </where>
    </select>
    
    <!-- 
    //======================================================================  
    // Review : Admin
    //======================================================================    
    -->     
    <!-- review : review_admin_list -->
    <select id="review_admin_list" parameterType="hashMap" resultType="ReviewDTO">
        SELECT * 
            FROM 
            (SELECT r.*, a.animal_name, ROW_NUMBER() OVER(
     	     	ORDER BY 
				<choose>
					<when test="order == ''"> review_no DESC</when>
					<when test="order.equals('date_desc')"> review_regdate DESC </when>         
					<when test="order.equals('hit_desc')"> review_hit DESC</when>         
					<when test="order.equals('no_desc')"> review_no DESC</when>         
					<when test="order.equals('title_desc')"> review_title</when>         
				</choose>
       		) rnum <include refid="review_join" />
	            WHERE 1 = 1
		        <if test="search_animal != null and !search_animal.equals('')">
		            AND animal_name LIKE '%' || #{ search_animal } || '%'
		        </if>
		        <if test="search_id != null and !search_id.equals('')">
		            AND review_id LIKE '%' || #{ search_id } || '%'
		        </if>
		        <if test="search_content != null and !search_content.equals('')">
		            AND (review_title LIKE '%' || #{ search_content } || '%' OR review_content LIKE '%' || #{ search_content })
		        </if>
	         <![CDATA[) WHERE rnum >= #{startNo} AND rnum <= #{endNo}]]>
    </select>
    
    <!-- review : review_admin_list -->
    <select id="review_admin_count" parameterType="hashMap" resultType="int">
        SELECT COUNT(*) 
            FROM (SELECT r.*, a.animal_name <include refid="review_join" />
            WHERE 1 = 1
            <if test="search_animal != null and !search_animal.equals('')">
                AND animal_name LIKE '%' || #{ search_animal } || '%'
            </if>
            <if test="search_id != null and !search_id.equals('')">
                AND review_id LIKE '%' || #{ search_id } || '%'
            </if>
            <if test="search_content != null and !search_content.equals('')">
	            AND (review_title LIKE '%' || #{ search_content } || '%' OR review_content LIKE '%' || #{ search_content })
            </if>
            )
    </select>
	
    <!-- 
    ///////////////////////////////////////////////////////
    // COMMENT
    /////////////////////////////////////////////////////// 
    -->         
    <!-- Comment : insert 댓글 입력 -->     
    <insert id="review_comment_insert" parameterType="ReviewCommentDTO">
        <selectKey resultType="int" keyProperty="comment_commentno" order="BEFORE">
        SELECT NVL(MAX(comment_commentno), 0)+1 
            FROM heartpet_review_comment
        </selectKey>
        INSERT INTO heartpet_review_comment 
            VALUES (#{ comment_commentno },
            #{ comment_reviewno },
            #{ comment_id },
            #{ comment_content },
            sysdate)
    </insert>
    
    <!-- Comment : list 댓글 목록 --> 
    <select id="review_comment_list" parameterType="int" resultType="ReviewCommentDTO">
        SELECT * 
            FROM heartpet_review_comment 
            WHERE comment_reviewno = #{ review_no } 
            ORDER BY comment_commentno
    </select>
        
    <!-- Comment : count 댓글 개수 -->    
    <select id="review_comment_count" parameterType="int" resultType="int">
        SELECT COUNT(*)
            FROM heartpet_review_comment
            WHERE comment_reviewno = #{ review_no }
    </select>
    
    <!-- Comment : delete  -->
    <delete id="review_comment_delete" parameterType="int">
        DELETE FROM heartpet_review_comment
            WHERE comment_commentno = #{ comment_commentno }
    </delete>
	
	<!-- 
	///////////////////////////////////////////////////////
	// myPage - review 개수 구하기
	///////////////////////////////////////////////////////	
	-->	
	<resultMap type="hashMap" id="myPageReview">
		<result property="review_no" column="review_no" />
		<result property="count" column="count" />	
	</resultMap>
	
	<select id="review_animal_no_count" parameterType="int" resultMap="myPageReview">
		SELECT COUNT(review_no) as count, review_no 
       		FROM heartpet_review
			WHERE review_animal_id = #{ animal_id }
            GROUP BY review_no
	</select>
		
</mapper>

