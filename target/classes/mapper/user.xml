<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserDAO">

	<sql id="user_select">
	<![CDATA[ 
		SELECT USER_NO, USER_ID, USER_PWD, USER_NAME, USER_GRADE, USER_EMAIL, USER_PHONE, USER_ADDR, USER_IMAGE, USER_TOTALPRICE, USER_ANIMALEXP 
	]]>
	</sql>
	
	<sql id="user_keyword">
		like '%' || #{keyword} || '%'
	</sql>
	
	<select id="id_check" parameterType="String" resultType="int">
		SELECT COUNT(USER_ID) FROM HEARTPET_USER WHERE USER_ID = #{id}
	</select>
	
	<insert id="kakao_insert" parameterType="map">
		<selectKey resultType="int" keyProperty="user_no" order="BEFORE">select max(user_no) from heartpet_user</selectKey> 
		INSERT INTO HEARTPET_USER VALUES (#{user_no}+1, #{id}, 'kakao1234', #{name}, default, #{email}, '', '', #{img}, default, '' )
	</insert>
	
	<insert id="naver_insert" parameterType="map">
		<selectKey resultType="int" keyProperty="user_no" order="BEFORE">select max(user_no) from heartpet_user</selectKey> 
		INSERT INTO HEARTPET_USER VALUES (#{user_no}+1, #{id}, 'naver1234', #{name}, default, #{email}, '', '', #{img}, default, '' )
	</insert>
	
	<select id="login" parameterType="String" resultType="String">
		SELECT USER_PWD FROM HEARTPET_USER WHERE USER_ID = #{id} and USER_GRADE NOT IN (5)
	</select>
	
	<select id="userInfo" parameterType="String" resultType="UserDTO">
		SELECT * FROM HEARTPET_USER WHERE USER_ID = #{id}
	</select>
	
	<insert id="join" parameterType="UserDTO">
		<selectKey keyProperty="user_no" resultType="int" order="BEFORE">select max(user_no)+1 from heartpet_user</selectKey>
		INSERT INTO HEARTPET_USER VALUES (#{user_no}, #{user_id}, #{user_pwd}, #{user_name}, default, #{user_email}, #{user_phone}, #{user_addr}, #{user_image}, default, #{user_animalexp})
	</insert>
	
	<select id="admin_check" parameterType="String" resultType="int">
		SELECT COUNT(USER_ID) FROM HEARTPET_USER WHERE USER_ID = #{id} AND USER_GRADE = 1 
	</select>
	
	<select id="user_list" parameterType="map" resultType="UserDTO">
		SELECT * FROM (select u.*, row_number() over(
			<choose>
				<when test="order.equals('')"> order by user_no desc </when>
	            <when test="order.equals('no_desc')">order by user_no DESC</when>
	            <when test="order.equals('grade_desc')">order by user_grade DESC, user_no</when>
	            <when test="order.equals('grade_asc')">order by user_grade, user_no</when>
	            <when test="order.equals('name_asc')">order by user_name</when>        
	        </choose>
			) rnum FROM HEARTPET_USER U WHERE USER_GRADE IN (1,2,3,4,5)
			<if test="user_id != null and !user_id.equals('')">
				AND USER_ID LIKE '%' || #{user_id } || '%'
			</if>
			<if test="user_grade != null and !user_grade.equals('')">
				AND USER_GRADE = #{user_grade}
			</if>
			<if test="user_animalexp != null and !user_animalexp.equals('')">
				AND USER_ANIMALEXP = #{user_animalexp}
			</if>
			
        <![CDATA[) WHERE rnum >= #{startNo} and rnum <= #{endNo}]]>
	</select>
	
	<select id="user_count" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM HEARTPET_USER WHERE USER_GRADE IN (1,2,3,4,5)
			<if test="user_id != null and !user_id.equals('')">
				AND USER_ID LIKE '%' || #{ user_id } || '%'
			</if>
			<if test="user_grade != null and !user_grade.equals('')">
				AND USER_GRADE = #{user_grade}
			</if>
			<if test="user_animalexp != null and !user_animalexp.equals('')">
				AND USER_ANIMALEXP = #{user_animalexp}
			</if>
	</select>
	
	<select id="email_check" parameterType="String" resultType="int">
		SELECT COUNT(USER_EMAIL) FROM HEARTPET_USER WHERE USER_EMAIL = #{email} 
	</select>
	
	<select id="total_user" resultType="int">
		SELECT COUNT(*) FROM HEARTPET_USER WHERE USER_GRADE NOT IN (1,5)
	</select>
	
	<update id="update_num" parameterType="int">
		UPDATE HEARTPET_USER SET USER_NO = (USER_NO - 1) WHERE USER_NO > #{no} 
	</update>
	
	<update id="delete_user" parameterType="int">
		UPDATE HEARTPET_USER SET USER_GRADE = 5 WHERE USER_NO = #{no}
	</update>
	
	<update id="update_user" parameterType="UserDTO">
		UPDATE HEARTPET_USER SET USER_GRADE = #{user_grade}, USER_EMAIL = #{user_email}, USER_PHONE = #{user_phone}, USER_ADDR = #{user_addr}, USER_TOTALPRICE = #{user_totalprice}, USER_ANIMALEXP = #{user_animalexp} WHERE USER_ID = #{user_id}
	</update>
	
	<select id="find_id" parameterType="map" resultType="String">
		SELECT USER_ID FROM HEARTPET_USER WHERE USER_NAME = #{name} AND USER_EMAIL = #{email}
	</select>
	
	<select id="find_pwd" parameterType="map" resultType="String">
		SELECT USER_PWD FROM HEARTPET_USER WHERE USER_ID = #{id} AND USER_EMAIL = #{email}
	</select>
	
	<select id="pwd_email" parameterType="String" resultType="String">
		SELECT USER_EMAIL FROM HEARTPET_USER WHERE USER_ID = #{id}
	</select>
	
	<select id="id_name" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM HEARTPET_USER WHERE USER_NAME=#{name}
	</select>
	
	<select id="id_email" parameterType="map" resultType="String">
		SELECT USER_EMAIL FROM HEARTPET_USER WHERE USER_NAME = #{name} AND USER_EMAIL = #{email}
	</select>
	
</mapper>