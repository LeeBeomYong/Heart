<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="QnaDAO">

	<!-- 
	////////////////////////////////////////////////////////////////////////////////////////////  
	// QNA
	////////////////////////////////////////////////////////////////////////////////////////////  	
	-->
	<sql id="qna_select">
		select * from heartpet_board 
	</sql>
	<sql id="qna_keyword">
		like '%' || #{keyword} || '%'
	</sql>
	<!-- list -->
	<select id="qna_list" parameterType="hashMap" resultType="QnaDTO">
		<![CDATA[select * from (select b.*, row_number() over(order by board_no desc) rnum from heartpet_board b ]]>
		<where>
		 <choose>
            <when test="field.equals('allSearch') and keyword != ''"> (board_title <include refid="qna_keyword" />) or (board_content <include refid="qna_keyword" />) or (board_category <include refid="qna_keyword" />) or (board_id <include refid="qna_keyword" />)</when>
            <when test="field.equals('title') and keyword != ''"> board_title <include refid="qna_keyword" /></when>
            <when test="field.equals('content') and keyword != ''"> board_content <include refid="qna_keyword" /></when>
            <when test="field.equals('category') and keyword != ''"> board_category <include refid="qna_keyword" /></when>
            <when test="field.equals('id') and keyword != ''"> board_id <include refid="qna_keyword" /></when>
         </choose>
         </where>
         <![CDATA[) where rnum >= #{startNo} and rnum <= #{endNo}]]>
	</select>
	
	<!-- content -->
	<update id="qna_hit" parameterType="int">
		update heartpet_board set board_hit = board_hit + 1 where board_no = #{ board_no }
	</update>
	
	<select id="qna_content" parameterType="int" resultType="QnaDTO">
		<include refid="qna_select" /> where board_no = #{ board_no }
	</select>
	
	<!-- count : 게시글 개수 -->
	<select id="qna_count" parameterType="hashMap" resultType="int">
		select count(*) from heartpet_board
		<where>
	 	<choose>
	 		<when test="field == '' and keyword == ''"></when>
			<when test="field.equals('allSearch') and keyword != ''"> (board_title <include refid="qna_keyword" />) or (board_content <include refid="qna_keyword" />) or (board_category <include refid="qna_keyword" />) or (board_id <include refid="qna_keyword" />)</when>
			<when test="field.equals('title') and keyword != ''"> board_title <include refid="qna_keyword" /></when>
			<when test="field.equals('content') and keyword != ''"> board_content <include refid="qna_keyword" /></when>
			<when test="field.equals('category') and keyword != ''"> board_category <include refid="qna_keyword" /></when>
			<when test="field.equals('id') and keyword != ''"> board_id <include refid="qna_keyword" /></when>
		</choose>
        </where>
	</select>
	
	<!-- insert -->
	<insert id="qna_insert" parameterType="QnaDTO">
		<selectKey resultType="int" keyProperty="board_no" order="BEFORE">
			select max(board_no)+1 from heartpet_board
		</selectKey>
		insert into heartpet_board values (#{ board_no }, #{ board_category }, #{ board_id }, default, #{ board_title },
		#{ board_content }, #{ board_secret }, #{ board_pwd }, sysdate, '', '', '')
	</insert>
	
	<!-- update -->
	<update id="qna_update" parameterType="QnaDTO">
		update heartpet_board set board_category = #{ board_category }, board_title = #{ board_title }, board_content = #{ board_content }, 
		board_secret = #{ board_secret }, board_update = sysdate
		<if test="board_img1 != null">, board_img1 = #{ board_img1 } </if> 
		<if test="board_img2 != null">, board_img2 = #{ board_img2 } </if> 
		where board_no = #{ board_no }
	</update>
	
	<!-- delete -->
	<delete id="qna_delete" parameterType="int">
		delete from heartpet_board where board_no = #{ board_no }
	</delete>
	
	<!-- 
	////////////////////////////////////////////////////////////////////////////////////////////  
	// FNQ
	////////////////////////////////////////////////////////////////////////////////////////////  	
	-->
	<select id="fnq_count" parameterType="hashMap" resultType="int">
		select count(*) from heartpet_fnq
		<where>
	 	<choose>
	 		<when test="field == '' and keyword == ''"></when>
			<when test="field.equals('allSearch') and keyword != ''"> (fnq_category <include refid="qna_keyword" />) or (fnq_question <include refid="qna_keyword" />) or (fnq_answer <include refid="qna_keyword" />)</when>
			<when test="field.equals('category') and keyword != ''"> fnq_category <include refid="qna_keyword" /></when>
			<when test="field.equals('question') and keyword != ''"> fnq_question <include refid="qna_keyword" /></when>
			<when test="field.equals('answer') and keyword != ''"> fnq_answer <include refid="qna_keyword" /></when>
		</choose>
        </where>
	</select>
	
	<select id="fnq_list" parameterType="hashMap" resultType="FnqDTO">
		<![CDATA[select * from (select b.*, row_number() over(order by fnq_no desc) rnum from heartpet_fnq b ]]>
		<where>
		 <choose>
	 		<when test="field == '' and keyword == ''"></when>
			<when test="field.equals('allSearch') and keyword != ''"> (fnq_category <include refid="qna_keyword" />) or (fnq_question <include refid="qna_keyword" />) or (fnq_answer <include refid="qna_keyword" />)</when>
			<when test="field.equals('category') and keyword != ''"> fnq_category <include refid="qna_keyword" /></when>
			<when test="field.equals('question') and keyword != ''"> fnq_question <include refid="qna_keyword" /></when>
			<when test="field.equals('answer') and keyword != ''"> fnq_answer <include refid="qna_keyword" /></when>
         </choose>
         </where>
         <![CDATA[) where rnum >= #{startNo} and rnum <= #{endNo}]]>
	</select>
	
	<insert id="fnq_insert">
	
	</insert>
	
</mapper>

